"use strict";(self.webpackChunkrmc_software_documentation=self.webpackChunkrmc_software_documentation||[]).push([[1875],{4462:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"documentation-guide/scripts","title":"Scripts Folder","description":"The scripts/ folder contains custom Node.js scripts for automation and data generation in the RMC Software Documentation project.","source":"@site/docs/00-documentation-guide/05-scripts.mdx","sourceDirName":"00-documentation-guide","slug":"/documentation-guide/scripts","permalink":"/RMC-Software-Documentation/docs/documentation-guide/scripts","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1751426017000,"sidebarPosition":5,"frontMatter":{"title":"Scripts Folder","sidebar_label":"Scripts Folder"},"sidebar":"documentationGuide","previous":{"title":"Docs Folder","permalink":"/RMC-Software-Documentation/docs/documentation-guide/docs-folder"},"next":{"title":"Src Folder","permalink":"/RMC-Software-Documentation/docs/documentation-guide/src-folder"}}');var r=s(4848),t=s(8453);const o={title:"Scripts Folder",sidebar_label:"Scripts Folder"},l="Scripts Folder",d={},c=[{value:"DOCX to MDX Converter",id:"docx-to-mdx-converter",level:2},{value:"Overview",id:"overview",level:3},{value:"File Structure",id:"file-structure",level:4},{value:"File Descriptions",id:"file-descriptions",level:4},{value:"What It Does",id:"what-it-does",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3},{value:"<strong>counters.js</strong>",id:"countersjs",level:2},{value:"Overview",id:"overview-1",level:3},{value:"What It Does",id:"what-it-does-1",level:3},{value:"Output",id:"output-1",level:3},{value:"Usage",id:"usage-1",level:3},{value:"<strong>reportIdMap.js</strong>",id:"reportidmapjs",level:2},{value:"Overview",id:"overview-2",level:3},{value:"What It Does",id:"what-it-does-2",level:3},{value:"Output",id:"output-2",level:3},{value:"Usage",id:"usage-2",level:3},{value:"<strong>generateSidebars.js</strong>",id:"generatesidebarsjs",level:2},{value:"Overview",id:"overview-3",level:3},{value:"What It Does",id:"what-it-does-3",level:3},{value:"Output",id:"output-3",level:3},{value:"Usage",id:"usage-3",level:3},{value:"<strong>versions.js</strong>",id:"versionsjs",level:2},{value:"Overview",id:"overview-4",level:3},{value:"What It Does",id:"what-it-does-4",level:3},{value:"Output",id:"output-4",level:3},{value:"Usage",id:"usage-4",level:3}];function a(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"scripts-folder",children:"Scripts Folder"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"scripts/"})," folder contains custom Node.js scripts for automation and data generation in the RMC Software Documentation project."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"docx-to-mdx-converter",children:"DOCX to MDX Converter"}),"\n",(0,r.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"docx_to_mdx"})," Python script is designed to automate the conversion of Microsoft Word (",(0,r.jsx)(n.code,{children:".docx"}),") documents using the standard RMC Word Document Template into modular\r\nMDX files, suitable for use with Docusaurus or other React-based documentation systems. It extracts and processes figures, tables, equations, citations, and document\r\nstructure, outputting clean, component-rich MDX files and associated assets. This script allows for efficient conversion of existing Word documents into the RMC Software\r\nDocumentation site format."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"This script will not work if the DOCX file does not follow the standard RMC Word Document Template."}),(0,r.jsx)(n.br,{}),"\n","Ensure your document is formatted correctly before running the script."]})}),"\n",(0,r.jsx)(n.h4,{id:"file-structure",children:"File Structure"}),"\n",(0,r.jsxs)(n.p,{children:["Below is a typical file structure for the ",(0,r.jsx)(n.code,{children:"docx_to_mdx"})," script, with a brief description of each file\u2019s purpose."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docx_to_mdx/\r\n\u2502\r\n\u251c\u2500\u2500 main.py              # Entry point; orchestrates the DOCX to MDX conversion process.\r\n\u251c\u2500\u2500 constants.py         # Contains style mappings and global constants for parsing DOCX.\r\n\u251c\u2500\u2500 helpers.py           # Utility functions for formatting, file operations, JSX/MDX generation, and user prompts.\r\n\u251c\u2500\u2500 figures.py           # Handles extraction of figures and their captions from DOCX, saves images, and manages figure references.\r\n\u251c\u2500\u2500 tables.py            # Extracts tables from DOCX, formats them for MDX, and manages table references.\r\n\u251c\u2500\u2500 citations.py         # Parses citations and bibliography entries, formats them for MDX.\r\n\u251c\u2500\u2500 equations.py         # Extracts and formats equations and equation references for MDX.\r\n\u251c\u2500\u2500 docx_processor.py    # Main DOCX parsing logic; splits document into sections, identifies elements, and coordinates extraction.\r\n\u251c\u2500\u2500 mdx_writer.py        # Writes the processed content (sections, figures, tables, etc.) to MDX files.\r\n\u251c\u2500\u2500 README.md            # Documentation for the script, usage instructions, and requirements.\n"})}),"\n",(0,r.jsx)(n.h4,{id:"file-descriptions",children:"File Descriptions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"main.py"}),(0,r.jsx)(n.br,{}),"\n","The main script to run. Handles user prompts, sets up input/output paths, and calls the appropriate modules to process the DOCX and generate MDX files and assets."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"constants.py"}),(0,r.jsx)(n.br,{}),"\n","Stores style names, mappings, and other constants used to identify and process elements in the DOCX file (e.g., which styles correspond to headings, figures, tables, etc.)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"helpers.py"}),(0,r.jsx)(n.br,{}),"\n","Provides utility functions for formatting text, handling JSX/MDX output, file and directory operations, user confirmations, and other shared logic."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"figures.py"}),(0,r.jsx)(n.br,{}),"\n","Contains logic for detecting figures in the DOCX, extracting and saving figure images, parsing and cleaning captions, and generating MDX-compatible figure components and references."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"tables.py"}),(0,r.jsx)(n.br,{}),"\n","Handles extraction of tables from the DOCX, formatting them as Markdown or MDX components, and managing table references."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"citations.py"}),(0,r.jsx)(n.br,{}),"\n","Parses in-text citations and bibliography entries, formats them for MDX, and links them to the bibliography if provided."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"equations.py"}),(0,r.jsx)(n.br,{}),"\n","Extracts equations and equation references from the DOCX, formats them for MDX, and generates appropriate components."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"docx_processor.py"}),(0,r.jsx)(n.br,{}),"\n","The core parser that reads the DOCX file, identifies document structure (sections, headings, paragraphs), and coordinates the extraction of figures, tables, equations, and citations."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"mdx_writer.py"}),(0,r.jsx)(n.br,{}),"\n","Responsible for writing the processed content to MDX files, organizing sections, and ensuring correct references and imports for assets."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"README.md"}),(0,r.jsx)(n.br,{}),"\n","Provides an overview, usage instructions, requirements, and other documentation for users of the script."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"what-it-does",children:"What It Does"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration and Setup"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The user specifies input and output paths for the DOCX file, bibliography, figures directory, and MDX output directory in ",(0,r.jsx)(n.code,{children:"main.py"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"The script checks for required dependencies and prompts the user to confirm whether the input variables are set correctly and whether figures should be regenerated within\r\nthe figures folder of the Docusaurus project."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"DOCX Parsing"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The script loads the DOCX file using ",(0,r.jsx)(n.code,{children:"python-docx"})," and parses the document structure, identifying sections, headings, paragraphs, figures, tables, equations, and citations\r\nbased on style mappings defined in ",(0,r.jsx)(n.code,{children:"constants.py"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Figure Extraction"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Figures are detected by their style (e.g., "RMC_Figure").'}),"\n",(0,r.jsx)(n.li,{children:"Each figure image is extracted and saved as a PNG file in the specified figures directory."}),"\n",(0,r.jsx)(n.li,{children:"Figure captions are parsed, cleaned, and associated with the correct image."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Table Extraction"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Tables are identified and converted into Markdown or MDX table components."}),"\n",(0,r.jsx)(n.li,{children:"Table captions and references are handled and linked appropriately."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Equation and Citation Handling"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Inline equations and references are detected and formatted for MDX."}),"\n",(0,r.jsx)(n.li,{children:"Citations are parsed and linked to the provided bibliography file."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Section and Navigation Structure"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The script builds a modular section structure, splitting the document into logical MDX files based on headings."}),"\n",(0,r.jsx)(n.li,{children:"Navigation metadata can be generated for Docusaurus sidebars."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MDX File Generation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each section, figure, table, and equation is written to an MDX file in the output directory."}),"\n",(0,r.jsx)(n.li,{children:"MDX files include custom React components for figures, tables, and references, ready for use in Docusaurus."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Asset Management"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All extracted images are saved to the figures directory."}),"\n",(0,r.jsx)(n.li,{children:"Relative paths are set so MDX files can reference images correctly."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"The script generates the necessary MDX files and figures to allow the Docusaurus project to build the document. When successful, the document will be in draft form and\r\nready for review following minor edits."})}),"\n",(0,r.jsx)(n.p,{children:"Outputs include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MDX Files:"}),(0,r.jsx)(n.br,{}),"\n","Modular ",(0,r.jsx)(n.code,{children:".mdx"})," files for each section or chapter of the original DOCX, placed in your specified output directory (e.g., ",(0,r.jsx)(n.code,{children:"docs/"})," or ",(0,r.jsx)(n.code,{children:"docs/generated/"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Figures:"}),(0,r.jsx)(n.br,{}),"\n","Extracted figure images as ",(0,r.jsx)(n.code,{children:".png"})," files, saved in the designated figures directory (e.g., ",(0,r.jsx)(n.code,{children:"static/img/figures/"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Assign Input and Output Paths"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Open ",(0,r.jsx)(n.code,{children:"main.py"})," in the ",(0,r.jsx)(n.code,{children:"scripts/"})," folder."]}),"\n",(0,r.jsxs)(n.li,{children:["Set the following variables at the top:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DOCX_PATH"}),": Path to your input ",(0,r.jsx)(n.code,{children:".docx"})," file (e.g., ",(0,r.jsx)(n.code,{children:"../input/YourDoc.docx"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"BIB_PATH"}),": Path to your bibliography JSON file (optional)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"FIGURES_DIR"}),": Output directory for extracted figures (e.g., ",(0,r.jsx)(n.code,{children:"../static/img/figures"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MDX_DIR"}),": Output directory for generated MDX files (e.g., ",(0,r.jsx)(n.code,{children:"../docs/generated"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"FIGSRC"}),": Relative path for figures in MDX (e.g., ",(0,r.jsx)(n.code,{children:"/img/figures"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Navigation variables as needed for your Docusaurus sidebar"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Install Dependencies"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure you have Python 3.8+ installed."}),"\n",(0,r.jsxs)(n.li,{children:["Install required packages:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"pip install python-docx pillow python-slugify docx2python\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Run the Script"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["From your project root or the ",(0,r.jsx)(n.code,{children:"scripts/"})," folder, run:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npm run convert\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["The script will prompt you to confirm the following:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Whether the input and output variables are set correctly (Y or N). If you choose N, the script will exit."}),"\n",(0,r.jsx)(n.li,{children:"Whether to regenerate figures in the Docusaurus project directory (Y or N). If all figures from the DOCX are already present in the figures directory,\r\nyou can choose not to regenerate them (N). If you choose to regenerate figures (Y), the script will overwrite existing images in the figures directory."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Check Outputs"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Find your generated ",(0,r.jsx)(n.code,{children:".mdx"})," files in the output directory you specified (e.g., ",(0,r.jsx)(n.code,{children:"docs/generated/"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Find extracted figure images in the figures directory (e.g., ",(0,r.jsx)(n.code,{children:"static/img/figures/"}),")."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Integrate with Docusaurus"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The generated MDX files and images are now ready for use in your Docusaurus site."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This Python script is a preprocessing tool. It is not run by Docusaurus at runtime, but before you build or serve your site.\r\nFor troubleshooting, check the console output and review the generated files for formatting or extraction issues."})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"countersjs",children:(0,r.jsx)(n.strong,{children:"counters.js"})}),"\n",(0,r.jsx)(n.h3,{id:"overview-1",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"counters.js"})," script scans all ",(0,r.jsx)(n.code,{children:".mdx"})," files in the ",(0,r.jsx)(n.code,{children:"docs/"})," directory, extracts metadata from custom components like ",(0,r.jsx)(n.code,{children:"<Figure>"}),",\r\n",(0,r.jsx)(n.code,{children:"<Table*>"}),", ",(0,r.jsx)(n.code,{children:"<Equation>"}),", and ",(0,r.jsx)(n.code,{children:"<Citation>"}),", and generates a structured JSON file for each report. These JSON files are stored in\r\n",(0,r.jsx)(n.code,{children:"static/counters/"})," and contain consistent numbering and metadata for figures, tables, equations, and citations."]}),"\n",(0,r.jsx)(n.h3,{id:"what-it-does-1",children:"What It Does"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Recursively scans the ",(0,r.jsx)(n.code,{children:"docs/"})," directory for folders containing ",(0,r.jsx)(n.code,{children:".mdx"})," files."]}),"\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"reportIdMap.js"})," to associate each folder with a unique ",(0,r.jsx)(n.code,{children:"reportId"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["For each matched folder:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Parses all ",(0,r.jsx)(n.code,{children:".mdx"})," files to find:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'<Figure figKey="...">'})," components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'<TableHorizontal tableKey="...">'}),", ",(0,r.jsx)(n.code,{children:"<TableVertical>"}),", or ",(0,r.jsx)(n.code,{children:"<TableVerticalLeftAlign>"})," components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'<Equation equationKey="...">'})," components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'<Citation citationKey="...">'})," components"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Assigns a unique number to each:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"figNumber"})," for figures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tableNumber"})," for tables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"equationNumber"})," for equations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"citationNumber"})," for citations"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Records additional metadata for each:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"figKey"}),", ",(0,r.jsx)(n.code,{children:"tableKey"}),", ",(0,r.jsx)(n.code,{children:"equationKey"}),", or ",(0,r.jsx)(n.code,{children:"citationKey"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"parentDocId"})," (from ",(0,r.jsx)(n.code,{children:"reportIdMap.js"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"parentDocPath"})," (relative path within ",(0,r.jsx)(n.code,{children:"docs/"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docId"})," (name of the ",(0,r.jsx)(n.code,{children:".mdx"})," file)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"output-1",children:"Output"}),"\n",(0,r.jsxs)(n.p,{children:["Each output file is saved to: ",(0,r.jsx)(n.code,{children:"static/counters/<reportId>.json"}),". The structure of the JSON output looks like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "figures": {\r\n    "figKey": {\r\n      "figNumber": 1,\r\n      "parentDocId": "soil-erosion",\r\n      "parentDocPath": "rmc/soil/contact-erosion",\r\n      "docId": "overview.mdx"\r\n    }\r\n  },\r\n  "tables": {\r\n    "tableKey": {\r\n      "tableNumber": 1,\r\n      "parentDocId": "soil-erosion",\r\n      "parentDocPath": "rmc/soil/contact-erosion",\r\n      "docId": "overview.mdx"\r\n    }\r\n  },\r\n  "equations": {\r\n    "equationKey": {\r\n      "equationNumber": 1,\r\n      "parentDocId": "soil-erosion",\r\n      "parentDocPath": "rmc/soil/contact-erosion",\r\n      "docId": "overview.mdx"\r\n    }\r\n  },\r\n  "citations": {\r\n    "citationKey": {\r\n      "citationNumber": 1,\r\n      "parentDocId": "internal-erosion-suite-backward-erosion-piping-progression-v1.0",\r\n      "parentDocPath": "toolbox-technical-manuals/internal-erosion-suite/backward-erosion-piping-progression/v1.0",\r\n      "docId": "04-background.mdx"\r\n    },\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"This script is automatically run on project start, build, and deploy. No additional execution of this script is required."}),"\n",(0,r.jsxs)(n.p,{children:["During project build, React components like ",(0,r.jsx)(n.code,{children:"<Figure>"}),", ",(0,r.jsx)(n.code,{children:"<Table*>"}),", ",(0,r.jsx)(n.code,{children:"<Equation>"}),", ",(0,r.jsx)(n.code,{children:"<Citation>"}),", ",(0,r.jsx)(n.code,{children:"<CitationFootnote>"}),", and ",(0,r.jsx)(n.code,{children:"<Bibliography>"})," will use the generated\r\ncounters JSON files to automatically assign sequential and appropriate numbering to figures, tables, equations, captions, and citations. This relieves the user of the\r\nburden of manually numbering these elements."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"reportidmapjs",children:(0,r.jsx)(n.strong,{children:"reportIdMap.js"})}),"\n",(0,r.jsx)(n.h3,{id:"overview-2",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["This Node.js script scans the ",(0,r.jsx)(n.code,{children:"docs/"})," folder structure to automatically generate a ",(0,r.jsx)(n.code,{children:"reportIdMap.js"})," file in ",(0,r.jsx)(n.code,{children:"src/"}),". It identifies documentation paths\r\nbased on versioned subfolders (e.g., ",(0,r.jsx)(n.code,{children:"v1.0"}),", ",(0,r.jsx)(n.code,{children:"v2.1"}),") and builds unique report IDs based on the folder hierarchy."]}),"\n",(0,r.jsx)(n.h3,{id:"what-it-does-2",children:"What It Does"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Recursively walks the ",(0,r.jsx)(n.code,{children:"docs/"})," directory."]}),"\n",(0,r.jsxs)(n.li,{children:["Identifies folders with names matching a version pattern like ",(0,r.jsx)(n.code,{children:"v1.0"}),", ",(0,r.jsx)(n.code,{children:"v2.1"}),", etc."]}),"\n",(0,r.jsxs)(n.li,{children:["Constructs a unique ",(0,r.jsx)(n.code,{children:"reportId"})," in the format: ",(0,r.jsx)(n.code,{children:"<subHub>-<documentName>-<version>"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Where:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"subHub"})," is the folder two levels above the version folder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"documentName"})," is the folder directly above the version folder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"version"})," is the version folder name (e.g., ",(0,r.jsx)(n.code,{children:"v1.0"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Maps the full relative path to the generated report ID."}),"\n",(0,r.jsxs)(n.li,{children:["Saves the result as an exported JavaScript object in ",(0,r.jsx)(n.code,{children:"src/reportIdMap.js"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"If the folder structure does not contain enough levels (i.e., it lacks a parent document or subHub folder), the script skips that entry and logs a warning."})}),"\n",(0,r.jsx)(n.h3,{id:"output-2",children:"Output"}),"\n",(0,r.jsxs)(n.p,{children:["The output file (",(0,r.jsx)(n.code,{children:"reportIdMap.js"}),") is saved to: ",(0,r.jsx)(n.code,{children:"src/reportIdMap.js"}),". It exports an object mapping documentation paths to unique report IDs. The structure looks like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'// Auto-generated. Do not edit.\r\nconst reportIdMap = {\r\n  "desktop-applications/lifesim/users-guide/v1.0": "lifesim-users-guide-v1.0",\r\n  "desktop-applications/rmc-bestfit/users-guide/v1.0": "rmc-bestfit-users-guide-v1.0",\r\n  "desktop-applications/rmc-rfa/users-guide/v1.0": "rmc-rfa-users-guide-v1.0",\r\n  "desktop-applications/rmc-totalrisk/users-guide/v1.0": "rmc-totalrisk-users-guide-v1.0",\r\n  "toolbox-technical-manuals/internal-erosion-suite/backward-erosion-piping-progression/v1.0": "internal-erosion-suite-backward-erosion-piping-progression-v1.0",\r\n  "toolbox-technical-manuals/internal-erosion-suite/filter-evaluation-continuation/v1.0": "internal-erosion-suite-filter-evaluation-continuation-v1.0",\r\n  "web-applications/lst/users-guide/v1.0": "lst-users-guide-v1.0"\r\n};\r\nmodule.exports = reportIdMap;\n'})}),"\n",(0,r.jsx)(n.h3,{id:"usage-2",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"This script is automatically run on project start, build, and deploy. No additional execution of this script is required. It is used during the build process to\r\nallow React components to reference documentation paths by their unique report IDs."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"generatesidebarsjs",children:(0,r.jsx)(n.strong,{children:"generateSidebars.js"})}),"\n",(0,r.jsx)(n.h3,{id:"overview-3",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["This script automatically generates a structured ",(0,r.jsx)(n.code,{children:"sidebars.js"})," file for the RMC Software Documentation Docusaurus site, based on the organization of ",(0,r.jsx)(n.code,{children:".mdx"})," files\r\nwithin the ",(0,r.jsx)(n.code,{children:"docs/"})," directory."]}),"\n",(0,r.jsx)(n.h3,{id:"what-it-does-3",children:"What It Does"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Recursively walks the ",(0,r.jsx)(n.code,{children:"docs/"})," directory to find all ",(0,r.jsx)(n.code,{children:".mdx"})," files."]}),"\n",(0,r.jsx)(n.li,{children:"Groups files into categories based on their folder structure."}),"\n",(0,r.jsxs)(n.li,{children:["Constructs a sidebar structure that follows the standard document layout and naming convention defined in ",(0,r.jsx)(n.a,{href:"/RMC-Software-Documentation/docs/documentation-guide/docs-folder",children:"Docs Folder"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Generates a ",(0,r.jsx)(n.code,{children:"sidebars.js"})," file that exports a structured object for Docusaurus navigation."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"This script supports special-case logic for documents that require unique sidebar handling. Contact a site administrator if special-case logic is needed."})}),"\n",(0,r.jsx)(n.h3,{id:"output-3",children:"Output"}),"\n",(0,r.jsxs)(n.p,{children:["The output file is saved to: ",(0,r.jsx)(n.code,{children:"sidebars.js"}),". It exports an object that defines the sidebar structure for Docusaurus. The structure looks like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'rmcTotalriskusersGuide_v1_0: {\r\n    "Users Guide": [\r\n      {\r\n        "type": "category",\r\n        "label": "Document Information",\r\n        "collapsible": true,\r\n        "collapsed": true,\r\n        "items": [\r\n          {\r\n            "type": "doc",\r\n            "id": "desktop-applications/rmc-totalrisk/users-guide/v1.0/document-info",\r\n            "label": "Document Info"\r\n          },\r\n          {\r\n            "type": "doc",\r\n            "id": "desktop-applications/rmc-totalrisk/users-guide/v1.0/version-history",\r\n            "label": "Version History"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        "type": "category",\r\n        "label": "Main Report",\r\n        "collapsible": true,\r\n        "collapsed": false,\r\n        "items": [\r\n          {\r\n            "type": "doc",\r\n            "id": "desktop-applications/rmc-totalrisk/users-guide/v1.0/preface",\r\n            "label": "Preface"\r\n          },\r\n          {\r\n            "type": "doc",\r\n            "id": "desktop-applications/rmc-totalrisk/users-guide/v1.0/welcome",\r\n            "label": "Welcome to RMC-TotalRisk"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        "type": "category",\r\n        "label": "Appendices",\r\n        "collapsible": true,\r\n        "collapsed": true,\r\n        "items": [\r\n          {\r\n            "type": "doc",\r\n            "id": "desktop-applications/rmc-totalrisk/users-guide/v1.0/appendix-acronyms",\r\n            "label": "Appendix A - Acronyms"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\n'})}),"\n",(0,r.jsx)(n.h3,{id:"usage-3",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["This script is automatically run on project start, build, and deploy. No additional execution of this script is required. The generated ",(0,r.jsx)(n.code,{children:"sidebars.js"})," file will be\r\nused by Docusaurus to render the sidebar navigation for the documentation site."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"versionsjs",children:(0,r.jsx)(n.strong,{children:"versions.js"})}),"\n",(0,r.jsx)(n.h3,{id:"overview-4",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["This script scans the ",(0,r.jsx)(n.code,{children:"docs/"})," folder to identify and collect version information. It produces JSON files that list the latest versions available, all available\r\nversions, and generates URLs for use with the Algolia crawler to index the correct documentation versions."]}),"\n",(0,r.jsx)(n.h3,{id:"what-it-does-4",children:"What It Does"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Defines the base folders where documentation groups live (e.g., "desktop-applications", "toolbox-technical-manuals", "web-applications").'}),"\n",(0,r.jsxs)(n.li,{children:["Recursively walks through these folders to detect version folders that match a pattern like ",(0,r.jsx)(n.code,{children:"v1.0"}),", ",(0,r.jsx)(n.code,{children:"v2.3"}),", etc."]}),"\n",(0,r.jsx)(n.li,{children:"Identifies the latest version by sorting the version folders descending alphabetically."}),"\n",(0,r.jsx)(n.li,{children:"Collects all versions found for each document group."}),"\n",(0,r.jsx)(n.li,{children:"Outputs three JSON files: latest version map, full version list, and Algolia crawler URLs."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"output-4",children:"Output"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"latestVersions.json"}),": Contains a mapping of document paths to their latest version folder."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "toolbox-technical-manuals/internal-erosion-suite/backward-erosion-piping-progression": "v1.0",\r\n  "toolbox-technical-manuals/internal-erosion-suite/filter-evaluation-continuation": "v1.0",\r\n  "desktop-applications/lifesim/users-guide": "v1.0",\r\n  "desktop-applications/rmc-bestfit/users-guide": "v1.0",\r\n  "desktop-applications/rmc-totalrisk/users-guide": "v1.0",\r\n  "web-applications/lst/users-guide": "v1.0"\r\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"versionList.json"}),": Contains a mapping of document paths to all available version folders."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "toolbox-technical-manuals/internal-erosion-suite/backward-erosion-piping-progression": [\r\n    "v1.0"\r\n  ],\r\n  "toolbox-technical-manuals/internal-erosion-suite/filter-evaluation-continuation": [\r\n    "v1.0"\r\n  ]\r\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"algoliaCrawlerVersions.json"}),": Contains start URLs and discovery patterns based on the latest versions for Algolia's documentation crawler."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"usage-4",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"This script is automatically run on project start, build, and deploy. No additional execution of this script is required."}),"\n",(0,r.jsxs)(n.p,{children:["The output JSON files will be saved in the ",(0,r.jsx)(n.code,{children:"static/versions"})," folder."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);